"use strict";function runBlock($rootScope,MetaTags){$rootScope.MetaTags=MetaTags}function configure(UIRouterMetatagsProvider){UIRouterMetatagsProvider.setTitlePrefix("").setTitleSuffix("").setDefaultTitle("Default Title here").setDefaultDescription("Default description here").setDefaultKeywords("Default keywords here").setStaticProperties({}).setOGURL(!0)}function authenticate($q,authService,$state,$timeout){return console.log(authService.authentication.isAuth),authService.authentication.isAuth?$q.when():($timeout(function(){$state.go("app.login")}),$q.reject())}var app=angular.module("myApp",["ui.router","ui.router.metatags","LocalStorageModule"]);app.run(["$rootScope","MetaTags",runBlock]),app.config(["UIRouterMetatagsProvider",configure]),app.config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("app",{abstract:!0,url:"",templateUrl:"../src/views/app-container.html",controller:"appController"}).state("app.home",{url:"/",templateUrl:"../src/views/home.html",controller:"loginController",metaTags:{title:"",description:""}}).state("app.profile",{url:"/profile",templateUrl:"../src/views/profile.html",controller:"loginController",resolve:{authenticate:authenticate},metaTags:{title:"",description:""}}).state("app.login",{url:"/login",templateUrl:"../src/views/login.html",controller:"loginController",metaTags:{title:"",description:""}})}),app.config(function($httpProvider){$httpProvider.interceptors.push("authInterceptorService")}),app.run(["authService",function(authService){authService.getAuthData()}]);
"use strict";var uiroutermetatags;!function(t){function e(t,e,r,i){e.MetaTags=r,e.$on("$stateChangeStart",function(t,e,r,s,o){i.prerenderReady=!1}),e.$on("$stateChangeSuccess",function(e,i){i.metaTags||t.debug('MetaTags - route: "'+i.name+'" does not contain any metatags'),r.update(i.metaTags)}),e.$on("$stateChangeError",function(t,e,s,o,a,n){r.prerender.statusCode=500,i.prerenderReady=!0}),e.$on("$stateNotFound",function(t,e,s){r.prerender.statusCode=404,i.prerenderReady=!0})}var r=angular.module("ui.router.metatags",["ui.router"]),i=function(){function t(){this.prefix="",this.suffix="",this.defaultTitle="",this.defaultDescription="",this.defaultKeywords="",this.staticProperties={},this.enableOGURL=!1}return t.prototype.setTitlePrefix=function(t){return this.prefix=t,this},t.prototype.setTitleSuffix=function(t){return this.suffix=t,this},t.prototype.setDefaultTitle=function(t){return this.defaultTitle=t,this},t.prototype.setDefaultDescription=function(t){return this.defaultDescription=t,this},t.prototype.setDefaultKeywords=function(t){return this.defaultKeywords=t,this},t.prototype.setStaticProperties=function(t){return this.staticProperties=t,this},t.prototype.setOGURL=function(t){return this.enableOGURL=t,this},t.prototype.$get=function(){return{prefix:this.prefix,suffix:this.suffix,defaultTitle:this.defaultTitle,defaultDescription:this.defaultDescription,defaultKeywords:this.defaultKeywords,staticProperties:this.staticProperties,enableOGURL:this.enableOGURL}},t}();r.provider("UIRouterMetatags",i);var s=function(){function t(t,e,r,i,s,o,a){this.$log=t,this.UIRouterMetatags=e,this.$interpolate=r,this.$injector=i,this.$state=s,this.$location=o,this.$window=a,this.prerender={}}return t.$inject=["$log","UIRouterMetatags","$interpolate","$injector","$state","$location","$window"],t.prototype.update=function(t){var e=this;try{this.properties=angular.extend({},this.UIRouterMetatags.staticProperties),this.UIRouterMetatags.enableOGURL&&(this.properties["og:url"]=this.$location.absUrl()),t?(this.title=t.title?this.UIRouterMetatags.prefix+(this.getValue("title",t.title)||"")+this.UIRouterMetatags.suffix:this.UIRouterMetatags.defaultTitle,this.description=t.description?this.getValue("description",t.description):this.UIRouterMetatags.defaultDescription,this.keywords=t.keywords?this.getValue("keywords",t.keywords):this.UIRouterMetatags.defaultKeywords,angular.forEach(t.properties,function(t,r){var i=e.getValue(r,t);i&&(e.properties[r]=i)})):(this.title=this.UIRouterMetatags.defaultTitle,this.description=this.UIRouterMetatags.defaultDescription,this.keywords=this.UIRouterMetatags.defaultKeywords),t&&t.prerender?(this.prerender.statusCode=t.prerender.statusCode?this.getValue("prerender.statusCode",t.prerender.statusCode):200,this.prerender.header=t.prerender.header?this.getValue("rerender.header",t.prerender.header):null):(this.prerender.statusCode=200,this.prerender.header=null),this.$window.prerenderReady=!0}catch(r){this.$log.error("error occured when extracting metatags:",r)}},t.prototype.getValue=function(t,e){try{return e?"number"==typeof e?e:"string"==typeof e&&0===e.trim().length?null:angular.isFunction(e)||Array.isArray(e)?this.$injector.invoke(e,this,this.$state.$current.locals.globals):this.$interpolate(e)(this.$state.$current.locals.globals):null}catch(r){return this.$log.error("error occured when trying to get the value of tag:",t,r),null}},t}();r.service("MetaTags",s),e.$inject=["$log","$rootScope","MetaTags","$window"],r.run(e)}(uiroutermetatags||(uiroutermetatags={}));
"use strict";!function(a,b){var c=b.isDefined,d=b.isUndefined,e=b.isNumber,f=b.isObject,g=b.isArray,h=b.isString,i=b.extend,j=b.toJson;b.module("LocalStorageModule",[]).provider("localStorageService",function(){this.prefix="ls",this.storageType="localStorage",this.cookie={expiry:30,path:"/",secure:!1},this.defaultToCookie=!0,this.notify={setItem:!0,removeItem:!1},this.setPrefix=function(a){return this.prefix=a,this},this.setStorageType=function(a){return this.storageType=a,this},this.setDefaultToCookie=function(a){return this.defaultToCookie=!!a,this},this.setStorageCookie=function(a,b,c){return this.cookie.expiry=a,this.cookie.path=b,this.cookie.secure=c,this},this.setStorageCookieDomain=function(a){return this.cookie.domain=a,this},this.setNotify=function(a,b){return this.notify={setItem:a,removeItem:b},this},this.$get=["$rootScope","$window","$document","$parse","$timeout",function(a,b,k,l,m){function n(c){if(c||(c=b.event),s.setItem&&h(c.key)&&w(c.key)){var d=v(c.key);m(function(){a.$broadcast("LocalStorageModule.notification.changed",{key:d,newvalue:c.newValue,storageType:p.storageType})})}}var o,p=this,q=p.prefix,r=p.cookie,s=p.notify,t=p.storageType;k?k[0]&&(k=k[0]):k=document,"."!==q.substr(-1)&&(q=q?q+".":"");var u=function(a){return q+a},v=function(a){return a.replace(new RegExp("^"+q,"g"),"")},w=function(a){return 0===a.indexOf(q)},x=function(){try{var c=t in b&&null!==b[t],d=u("__"+Math.round(1e7*Math.random()));return c&&((o=b[t]).setItem(d,""),o.removeItem(d)),c}catch(b){return p.defaultToCookie&&(t="cookie"),a.$broadcast("LocalStorageModule.notification.error",b.message),!1}},y=x(),z=function(b,c,e){var f=J();try{if(K(e),c=d(c)?null:j(c),!y&&p.defaultToCookie||"cookie"===p.storageType)return y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),s.setItem&&a.$broadcast("LocalStorageModule.notification.setitem",{key:b,newvalue:c,storageType:"cookie"}),F(b,c);try{o&&o.setItem(u(b),c),s.setItem&&a.$broadcast("LocalStorageModule.notification.setitem",{key:b,newvalue:c,storageType:p.storageType})}catch(d){return a.$broadcast("LocalStorageModule.notification.error",d.message),F(b,c)}return!0}finally{K(f)}},A=function(b,c){var d=J();try{if(K(c),!y&&p.defaultToCookie||"cookie"===p.storageType)return y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),G(b);var e=o?o.getItem(u(b)):null;if(!e||"null"===e)return null;try{return JSON.parse(e)}catch(a){return e}}finally{K(d)}},B=function(){var b=J();try{var c=0;arguments.length>=1&&("localStorage"===arguments[arguments.length-1]||"sessionStorage"===arguments[arguments.length-1])&&(c=1,K(arguments[arguments.length-1]));var d,e;for(d=0;d<arguments.length-c;d++)if(e=arguments[d],!y&&p.defaultToCookie||"cookie"===p.storageType)y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),s.removeItem&&a.$broadcast("LocalStorageModule.notification.removeitem",{key:e,storageType:"cookie"}),H(e);else try{o.removeItem(u(e)),s.removeItem&&a.$broadcast("LocalStorageModule.notification.removeitem",{key:e,storageType:p.storageType})}catch(b){a.$broadcast("LocalStorageModule.notification.error",b.message),H(e)}}finally{K(b)}},E=function(){try{return b.navigator.cookieEnabled||"cookie"in k&&(k.cookie.length>0||(k.cookie="test").indexOf.call(k.cookie,"test")>-1)}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.message),!1}}(),F=function(b,c,h,i){if(d(c))return!1;if((g(c)||f(c))&&(c=j(c)),!E)return a.$broadcast("LocalStorageModule.notification.error","COOKIES_NOT_SUPPORTED"),!1;try{var l="",m=new Date,n="";if(null===c?(m.setTime(m.getTime()+-864e5),l="; expires="+m.toGMTString(),c=""):e(h)&&0!==h?(m.setTime(m.getTime()+24*h*60*60*1e3),l="; expires="+m.toGMTString()):0!==r.expiry&&(m.setTime(m.getTime()+24*r.expiry*60*60*1e3),l="; expires="+m.toGMTString()),b){var o="; path="+r.path;r.domain&&(n="; domain="+r.domain),"boolean"==typeof i?!0===i&&(n+="; secure"):!0===r.secure&&(n+="; secure"),k.cookie=u(b)+"="+encodeURIComponent(c)+l+o+n}}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.message),!1}return!0},G=function(b){if(!E)return a.$broadcast("LocalStorageModule.notification.error","COOKIES_NOT_SUPPORTED"),!1;for(var c=k.cookie&&k.cookie.split(";")||[],d=0;d<c.length;d++){for(var e=c[d];" "===e.charAt(0);)e=e.substring(1,e.length);if(0===e.indexOf(u(b)+"=")){var f=decodeURIComponent(e.substring(q.length+b.length+1,e.length));try{var g=JSON.parse(f);return"number"==typeof g?f:g}catch(a){return f}}}return null},H=function(a){F(a,null)},I=function(){for(var a=null,b=q.length,c=k.cookie.split(";"),d=0;d<c.length;d++){for(a=c[d];" "===a.charAt(0);)a=a.substring(1,a.length);var e=a.substring(b,a.indexOf("="));H(e)}},J=function(){return t},K=function(a){return a&&t!==a&&(t=a,y=x()),y};y&&(b.addEventListener?(b.addEventListener("storage",n,!1),a.$on("$destroy",function(){b.removeEventListener("storage",n)})):b.attachEvent&&(b.attachEvent("onstorage",n),a.$on("$destroy",function(){b.detachEvent("onstorage",n)})));return{isSupported:y,getStorageType:J,setStorageType:K,set:z,add:z,get:A,keys:function(b){var c=J();try{if(K(b),!y)return a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),[];var d=q.length,e=[];for(var f in o)if(f.substr(0,d)===q)try{e.push(f.substr(d))}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.Description),[]}return e}finally{K(c)}},remove:B,clearAll:function(b,c){var d=J();try{K(c);var e=q?new RegExp("^"+q):new RegExp,f=b?new RegExp(b):new RegExp;if(!y&&p.defaultToCookie||"cookie"===p.storageType)return y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),I();if(!y&&!p.defaultToCookie)return!1;var g=q.length;for(var h in o)if(e.test(h)&&f.test(h.substr(g)))try{B(h.substr(g))}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.message),I()}return!0}finally{K(d)}},bind:function(a,b,d,e,g){var h=A(e=e||b,g);return null===h&&c(d)?h=d:f(h)&&f(d)&&(h=i(h,d)),l(b).assign(a,h),a.$watch(b,function(a){z(e,a,g)},f(a[b]))},deriveKey:u,underiveKey:v,length:function(a){var c=J();try{K(a);for(var d=0,e=b[t],f=0;f<e.length;f++)0===e.key(f).indexOf(q)&&d++;return d}finally{K(c)}},defaultToCookie:this.defaultToCookie,cookie:{isSupported:E,set:F,add:F,get:G,remove:H,clearAll:I}}}]})}(window,window.angular);
"use strict";angular.module("myApp").service("homeService",function($http){});
"use strict";angular.module("myApp").service("authInterceptorService",["$q","$injector","$location","localStorageService",function($q,$injector,$state,localStorageService){this.request=function(config){config.headers=config.headers||{};var authData=localStorageService.get("authorizationData");return console.log(authData),authData&&(config.headers.Authorization=authData.token),config},this.responseError=function(rejection){if(401===rejection.status){var authService=$injector.get("authService");localStorageService.get("authorizationData");authService.logOut(),$location.path("/login")}return $q.reject(rejection)}}]);
"use strict";angular.module("myApp").factory("authService",["$http","$q","$state","localStorageService",function($http,$q,$state,localStorageService){var authServiceFactory={},_authentication={isAuth:!1,isAdmin:!1};return authServiceFactory.login=function(loginData){if(console.log(loginData),loginData.email&&loginData.password)return $http.post("http://localhost:3000/users/login",loginData)},authServiceFactory.logOut=function(){localStorageService.remove("authorizationData"),_authentication.isAuth=!1,_authentication.isAdmin=!1,$state.go("app.home")},authServiceFactory.register=function(registerData){console.log(registerData),registerData.password===registerData.confirmPassword&&$http.post("http://localhost:3000/users/register",registerData).then(function(response){console.log("Register Response: ",response),localStorageService.set("authorizationData",{user_id:response.data.id,token:response.data.token}),$state.go("app.profile")},function(error){console.log(error)})},authServiceFactory.getAuthData=function(){var authData=localStorageService.get("authorizationData");authData&&(console.log(authData),_authentication.hasInfo=authData.hasInfo,_authentication.isAdmin=authData.isAdmin,_authentication.studentId=authData.studentId,_authentication.userName=authData.userName,_authentication.isAuth=!0)},authServiceFactory.setAuthData=function(data){_authentication.isAuth=!0,_authentication.isAdmin=data.is_admin},authServiceFactory.authentication=_authentication,authServiceFactory}]);
"use strict";app.controller("appController",function($scope,authService){$scope.logOut=authService.logOut,$scope.isAdmin=authService.authentication.isAdmin});
"use strict";app.directive("navbar",function(){return{restrict:"E",templateUrl:"../src/components/navbar/navbar.html",controller:"loginController"}});
"use strict";app.controller("homeController",function($scope,$state,$stateParams,authService,localStorageService){});
"use strict";app.controller("loginController",function($scope,$state,$stateParams,authService,localStorageService){$scope.user={},$scope.loginError=!1,$scope.registerError=!1,$scope.login=function(){$scope.loginError=!1,console.log($scope.user),$scope.user.email&&$scope.user.password?authService.login($scope.user).then(function(response){console.log("Response: ",response),localStorageService.set("authorizationData",{user_id:response.data.id,token:response.data.token}),authService.setAuthData(response.data),$state.go("app.profile")},function(error){console.log("Error: ",error),$scope.loginError=!0,$scope.loginErrorMessage="The email provided doesn't belong to an account. Please try agian."}):($scope.loginError=!0,$scope.loginErrorMessage="Please ensure that all fields are filled out!")},$scope.logOut=function(){console.log($scope.user),authService.logOut()},$scope.register=function(){console.log($scope.user),$scope.registerError=!1,$scope.user.first_name&&$scope.user.last_name&&$scope.user.email&&$scope.user.password&&$scope.user.confirmPassword?$scope.user.password===$scope.user.confirmPassword?authService.register($scope.user):($scope.loginError=!0,$scope.loginErrorMessage="Oops! Looks like the passwords don't match."):($scope.loginError=!0,$scope.loginErrorMessage="Please ensure that all fields are filled out!")}});
"use strict";angular.module("myApp").filter("homeFilter",function(){return function(input,optional1,optional2){}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsInVpLXJvdXRlci5taW4uanMiLCJhbmd1bGFyLWxvY2FsLXN0b3JhZ2UubWluLmpzIiwiaG9tZVNlcnZpY2UuanMiLCJhdXRoSW50ZXJjZXB0b3JTZXJ2aWNlLmpzIiwiYXV0aFNlcnZpY2UuanMiLCJhcHBDb250cm9sbGVyLmpzIiwibmF2YmFyLmpzIiwiaG9tZUNvbnRyb2xsZXIuanMiLCJsb2dpbkNvbnRyb2xsZXIuanMiLCJob21lRmlsdGVyLmpzIl0sIm5hbWVzIjpbImFwcCIsIm1vZHVsZSIsIk1ldGFUYWdzIiwiJHJvb3RTY29wZSIsImNvbmZpZ3VyZSIsIlVJUm91dGVyTWV0YXRhZ3NQcm92aWRlciIsInNldFRpdGxlUHJlZml4Iiwic2V0RGVmYXVsdFRpdGxlIiwic2V0RGVmYXVsdERlc2NyaXB0aW9uIiwicnVuIiwic2V0U3RhdGljUHJvcGVydGllcyIsImNvbmZpZyIsIiRzdGF0ZSIsIiRxIiwiYXV0aFNlcnZpY2UiLCIkdGltZW91dCIsImNvbnNvbGUiLCJsb2ciLCJhdXRoZW50aWNhdGlvbiIsImlzQXV0aCIsInJlamVjdCIsImdvIiwiYW5ndWxhciIsInJ1bkJsb2NrIiwiYWJzdHJhY3QiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsInRlbXBsYXRlVXJsIiwib3RoZXJ3aXNlIiwidXJsIiwiY29udHJvbGxlciIsIm1ldGFUYWdzIiwiZGVzY3JpcHRpb24iLCJzdGF0ZSIsInJlc29sdmUiLCJhdXRoZW50aWNhdGUiLCJ0aXRsZSIsIiRodHRwUHJvdmlkZXIiLCJnZXRBdXRoRGF0YSIsInVpcm91dGVybWV0YXRhZ3MiLCJ0IiwiZSIsInIiLCJpIiwiJG9uIiwicyIsIm8iLCJwcmVyZW5kZXJSZWFkeSIsImRlYnVnIiwibmFtZSIsInVwZGF0ZSIsImEiLCJuIiwicHJlcmVuZGVyIiwic3RhdHVzQ29kZSIsInRoaXMiLCJwcmVmaXgiLCJzdWZmaXgiLCJkZWZhdWx0VGl0bGUiLCJkZWZhdWx0RGVzY3JpcHRpb24iLCJkZWZhdWx0S2V5d29yZHMiLCJzdGF0aWNQcm9wZXJ0aWVzIiwiZW5hYmxlT0dVUkwiLCJwcm90b3R5cGUiLCJzZXRUaXRsZVN1ZmZpeCIsInNldERlZmF1bHRLZXl3b3JkcyIsInNldE9HVVJMIiwiJGdldCIsInByb3ZpZGVyIiwiJGxvZyIsIlVJUm91dGVyTWV0YXRhZ3MiLCIkaW50ZXJwb2xhdGUiLCIkaW5qZWN0b3IiLCIkbG9jYXRpb24iLCIkd2luZG93IiwiJGluamVjdCIsInByb3BlcnRpZXMiLCJleHRlbmQiLCJhYnNVcmwiLCJnZXRWYWx1ZSIsImtleXdvcmRzIiwiZm9yRWFjaCIsImhlYWRlciIsImVycm9yIiwidHJpbSIsImxlbmd0aCIsImlzRnVuY3Rpb24iLCJBcnJheSIsImlzQXJyYXkiLCJpbnZva2UiLCIkY3VycmVudCIsImxvY2FscyIsImdsb2JhbHMiLCJzZXJ2aWNlIiwiYiIsImMiLCJpc0RlZmluZWQiLCJkIiwiaXNVbmRlZmluZWQiLCJpc051bWJlciIsImYiLCJpc09iamVjdCIsImciLCJoIiwiaXNTdHJpbmciLCJqIiwidG9Kc29uIiwic3RvcmFnZVR5cGUiLCJjb29raWUiLCJleHBpcnkiLCJwYXRoIiwic2VjdXJlIiwiZGVmYXVsdFRvQ29va2llIiwibm90aWZ5Iiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJzZXRQcmVmaXgiLCJzZXRTdG9yYWdlVHlwZSIsInNldERlZmF1bHRUb0Nvb2tpZSIsInNldFN0b3JhZ2VDb29raWUiLCJzZXRTdG9yYWdlQ29va2llRG9tYWluIiwiZG9tYWluIiwic2V0Tm90aWZ5IiwiayIsImwiLCJtIiwiZXZlbnQiLCJrZXkiLCJ3IiwidiIsIiRicm9hZGNhc3QiLCJuZXd2YWx1ZSIsIm5ld1ZhbHVlIiwicCIsInEiLCJkb2N1bWVudCIsInN1YnN0ciIsInUiLCJyZXBsYWNlIiwiUmVnRXhwIiwiaW5kZXhPZiIsIngiLCJNYXRoIiwicm91bmQiLCJyYW5kb20iLCJtZXNzYWdlIiwieSIsInoiLCJKIiwiSyIsIkYiLCJBIiwiRyIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJCIiwiYXJndW1lbnRzIiwiSCIsIkUiLCJuYXZpZ2F0b3IiLCJjb29raWVFbmFibGVkIiwiY2FsbCIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VGltZSIsInRvR01UU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic3BsaXQiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJkZWNvZGVVUklDb21wb25lbnQiLCJJIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsImRldGFjaEV2ZW50IiwiaXNTdXBwb3J0ZWQiLCJnZXRTdG9yYWdlVHlwZSIsInNldCIsImFkZCIsImdldCIsImtleXMiLCJwdXNoIiwiRGVzY3JpcHRpb24iLCJyZW1vdmUiLCJjbGVhckFsbCIsInRlc3QiLCJiaW5kIiwiYXNzaWduIiwiJHdhdGNoIiwiZGVyaXZlS2V5IiwidW5kZXJpdmVLZXkiLCJ3aW5kb3ciLCIkaHR0cCIsImxvY2FsU3RvcmFnZVNlcnZpY2UiLCJoZWFkZXJzIiwiYXV0aERhdGEiLCJBdXRob3JpemF0aW9uIiwidG9rZW4iLCJyZXNwb25zZUVycm9yIiwic3RhdHVzIiwicmVqZWN0aW9uIiwiZmFjdG9yeSIsImF1dGhTZXJ2aWNlRmFjdG9yeSIsImlzQWRtaW4iLCJzZXRBdXRoRGF0YSIsImxvZ2luRGF0YSIsInBhc3N3b3JkIiwicG9zdCIsIl9hdXRoZW50aWNhdGlvbiIsInJlZ2lzdGVyIiwicmVnaXN0ZXJEYXRhIiwiY29uZmlybVBhc3N3b3JkIiwidXNlcl9pZCIsInJlc3BvbnNlIiwiZGF0YSIsImlkIiwiaGFzSW5mbyIsInN0dWRlbnRJZCIsInVzZXJOYW1lIiwibG9naW4iLCJfbG9naW4iLCJfZ2V0QXV0aERhdGEiLCIkc2NvcGUiLCJsb2dPdXQiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsIiRzdGF0ZVBhcmFtcyIsInVzZXIiLCJsb2dpbkVycm9yIiwiZW1haWwiLCJsb2dpbkVycm9yTWVzc2FnZSIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJmaWx0ZXIiLCJpbnB1dCIsIm9wdGlvbmFsMSIsIm9wdGlvbmFsMiJdLCJtYXBwaW5ncyI6ImFBQUEsU0FBSUEsU0FBY0MsV0FBT0MsVUFHeEJDLFdBQVdELFNBQVdBLFNBQ3RCLFNBQUFFLFVBQUFDLDBCQUdDQSx5QkFERkMsZUFBbUJELElBQ2pCQSxlQUFBQSxJQVFERSxnQkFBQSxzQkFKSUMsc0JBQXNCLDRCQU12QkMsbUJBQW1CLHlCQUpsQkMsd0JBTURDLFVBQVEsR0FpRU5DLFNBQUFBLGFBQVVDLEdBQUFDLFlBQVZGLE9BQUFHLFVBUkosT0FTR0MsUUFKREMsSUFBQUgsWUFBQUksZUFBQUMsUUFMRUwsWUFBWUksZUFBZUMsT0FZdEJOLEdBQUdPLFFBUFZMLFNBQVMsV0FHUEgsT0FBT1MsR0FBRyxlQUlMUixHQUFHTyxVQXhGZCxJQUFJcEIsSUFBTXNCLFFBQVFyQixPQUFPLFNBQVUsWUFBYSxxQkFBc0IsdUJBaUJ0RUQsSUFBSVMsS0FBSyxhQUFjLFdBQVljLFdBRW5DdkIsSUFBSVcsUUFBUSwyQkFBNEJQLFlBUXJDb0IsSUFBQUEsT0FBQUEsU0FEYUMsZUFBQUMsb0JBR2JDLG1CQUFhQyxVQUFBLEtBSEFILGVBT1ZJLE1BQUssT0FDTEYsVUFBQUEsRUFDQUcsSUFBQUEsR0FDSEgsWUFBQSxrQ0FDR0ksV0FBVSxrQkFFUkMsTUFBQUEsWUFGUUgsSUFBQSxJQUtYSSxZQUFNLHlCQUNMSixXQUFLLGtCQUVMQyxVQUNISSxNQUFXQyxHQUNSSixZQUFVLE1BQUFFLE1BQUEsZUFLWEEsSUFBTSxXQUNMSixZQURrQiw0QkFFbEJGLFdBQWEsa0JBQ2JHLFNBQUFBLGFBQVlLLGNBQ2ZKLFVBQ0dBLE1BQVUsR0FDUkssWUFEUSxNQWhDZEgsTUFBQSxhQUpGSixJQUFBLFNBaUNNRixZQUFhLDBCQVVuQkcsV0FBQSxrQkFFRU8sVUFERkQsTUFBQSxHQU5RSixZQUFhLFFBZXJCaEMsSUFBQVcsT0FBU3dCLFNBQVRFLGVBQ0NyQixjQUFZRixhQUFZSSxLQUFBQSw0QkFJ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c0NvbnRlbnQiOlsidmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKFwibXlBcHBcIiwgWyd1aS5yb3V0ZXInLCAndWkucm91dGVyLm1ldGF0YWdzJywgJ0xvY2FsU3RvcmFnZU1vZHVsZSddKVxuXG5mdW5jdGlvbiBydW5CbG9jaygkcm9vdFNjb3BlLCBNZXRhVGFncykge1xuXHQkcm9vdFNjb3BlLk1ldGFUYWdzID0gTWV0YVRhZ3M7XG59XG5cbmZ1bmN0aW9uIGNvbmZpZ3VyZShVSVJvdXRlck1ldGF0YWdzUHJvdmlkZXIpIHtcbiAgVUlSb3V0ZXJNZXRhdGFnc1Byb3ZpZGVyXG4gICAgLnNldFRpdGxlUHJlZml4KCcnKVxuICAgIC5zZXRUaXRsZVN1ZmZpeCgnJylcbiAgICAuc2V0RGVmYXVsdFRpdGxlKCdEZWZhdWx0IFRpdGxlIGhlcmUnKVxuICAgIC5zZXREZWZhdWx0RGVzY3JpcHRpb24oJ0RlZmF1bHQgZGVzY3JpcHRpb24gaGVyZScpXG4gICAgLnNldERlZmF1bHRLZXl3b3JkcygnRGVmYXVsdCBrZXl3b3JkcyBoZXJlJylcbiAgICAuc2V0U3RhdGljUHJvcGVydGllcyh7fSlcbiAgICAuc2V0T0dVUkwodHJ1ZSk7XG59XG5cbmFwcC5ydW4oWyckcm9vdFNjb3BlJywgJ01ldGFUYWdzJywgcnVuQmxvY2tdKVxuXG5hcHAuY29uZmlnKFsnVUlSb3V0ZXJNZXRhdGFnc1Byb3ZpZGVyJywgY29uZmlndXJlXSlcblxuYXBwLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG5cbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XG5cbiAgJHN0YXRlUHJvdmlkZXJcblx0XHQuc3RhdGUoJ2FwcCcsIHtcblx0XHRcdGFic3RyYWN0OiB0cnVlLFxuXHRcdFx0dXJsOiAnJyxcblx0XHRcdHRlbXBsYXRlVXJsOiAnLi4vc3JjL3ZpZXdzL2FwcC1jb250YWluZXIuaHRtbCcsXG5cdFx0XHRjb250cm9sbGVyOiAnYXBwQ29udHJvbGxlcidcblx0XHR9KVxuICAgIC5zdGF0ZShcImFwcC5ob21lXCIsIHtcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICB0ZW1wbGF0ZVVybDogXCIuLi9zcmMvdmlld3MvaG9tZS5odG1sXCIsXG4gICAgICBjb250cm9sbGVyOiBcImxvZ2luQ29udHJvbGxlclwiLFxuXHRcdFx0Ly8gcmVzb2x2ZTogeyBhdXRoZW50aWNhdGU6IGF1dGhlbnRpY2F0ZSB9LFxuICAgICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgdGl0bGU6IFwiXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiXG4gICAgICB9XG4gICAgfSlcbiAgICAuc3RhdGUoXCJhcHAucHJvZmlsZVwiLCB7XG4gICAgICB1cmw6IFwiL3Byb2ZpbGVcIixcbiAgICAgIHRlbXBsYXRlVXJsOiBcIi4uL3NyYy92aWV3cy9wcm9maWxlLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXI6IFwibG9naW5Db250cm9sbGVyXCIsXG5cdFx0XHRyZXNvbHZlOiB7IGF1dGhlbnRpY2F0ZTogYXV0aGVudGljYXRlIH0sXG4gICAgICBtZXRhVGFnczoge1xuICAgICAgICB0aXRsZTogXCJcIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiXCJcbiAgICAgIH1cbiAgICB9KVxuICAgIC5zdGF0ZShcImFwcC5sb2dpblwiLCB7XG4gICAgICB1cmw6IFwiL2xvZ2luXCIsXG4gICAgICB0ZW1wbGF0ZVVybDogXCIuLi9zcmMvdmlld3MvbG9naW4uaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJsb2dpbkNvbnRyb2xsZXJcIixcblx0XHRcdC8vIHJlc29sdmU6IHsgYXV0aGVudGljYXRlOiBhdXRoZW50aWNhdGUgfSxcbiAgICAgIG1ldGFUYWdzOiB7XG4gICAgICAgIHRpdGxlOiBcIlwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJcIlxuICAgICAgfVxuICAgIH0pXG59KVxuXG4vLyBDb25maWd1cmUgZXZlcnkgb3V0Z29pbmcgcmVxdWVzdCB3aXRoIG5ldyBoZWFkZXJzIGZvdW5kIGluIGF1dGhJbnRlcmNlcHRvclNlcnZpY2VcbmFwcC5jb25maWcoZnVuY3Rpb24gKCRodHRwUHJvdmlkZXIpIHtcbiAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnYXV0aEludGVyY2VwdG9yU2VydmljZScpO1xufSk7XG5cbi8vIExvYWQgdXNlciBkYXRhIGludG8gdGhlIGF1dGhTZXJ2aWNlIHdoZW4gdGhlIGFwcCBib290cyB1cC5cbmFwcC5ydW4oWydhdXRoU2VydmljZScsIGZ1bmN0aW9uIChhdXRoU2VydmljZSkge1xuICAgIGF1dGhTZXJ2aWNlLmdldEF1dGhEYXRhKCk7XG59XSk7XG5cbmZ1bmN0aW9uIGF1dGhlbnRpY2F0ZSgkcSwgYXV0aFNlcnZpY2UsICRzdGF0ZSwgJHRpbWVvdXQpIHtcblx0Y29uc29sZS5sb2coYXV0aFNlcnZpY2UuYXV0aGVudGljYXRpb24uaXNBdXRoKTtcbiAgaWYgKGF1dGhTZXJ2aWNlLmF1dGhlbnRpY2F0aW9uLmlzQXV0aCkge1xuICAgIC8vIFJlc29sdmUgdGhlIHByb21pc2Ugc3VjY2Vzc2Z1bGx5XG4gICAgcmV0dXJuICRxLndoZW4oKVxuICB9XG5cdGVsc2Uge1xuICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgLy8gVGhpcyBjb2RlIHJ1bnMgYWZ0ZXIgdGhlIGF1dGhlbnRpY2F0aW9uIHByb21pc2UgaGFzIGJlZW4gcmVqZWN0ZWQuXG4gICAgICAvLyBHbyB0byB0aGUgbG9nLWluIHBhZ2VcbiAgICAgICRzdGF0ZS5nbygnYXBwLmxvZ2luJylcbiAgICB9KVxuXG4gICAgLy8gUmVqZWN0IHRoZSBhdXRoZW50aWNhdGlvbiBwcm9taXNlIHRvIHByZXZlbnQgdGhlIHN0YXRlIGZyb20gbG9hZGluZ1xuICAgIHJldHVybiAkcS5yZWplY3QoKVxuICB9XG59XG4iLCJ2YXIgdWlyb3V0ZXJtZXRhdGFnczshZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LGUscixpKXtmdW5jdGlvbiBzKHQsZSxyLHMsbyl7aS5wcmVyZW5kZXJSZWFkeT0hMX1mdW5jdGlvbiBvKGUsaSl7aS5tZXRhVGFnc3x8dC5kZWJ1ZygnTWV0YVRhZ3MgLSByb3V0ZTogXCInK2kubmFtZSsnXCIgZG9lcyBub3QgY29udGFpbiBhbnkgbWV0YXRhZ3MnKSxyLnVwZGF0ZShpLm1ldGFUYWdzKX1mdW5jdGlvbiBhKHQsZSxzLG8sYSxuKXtyLnByZXJlbmRlci5zdGF0dXNDb2RlPTUwMCxpLnByZXJlbmRlclJlYWR5PSEwfWZ1bmN0aW9uIG4odCxlLHMpe3IucHJlcmVuZGVyLnN0YXR1c0NvZGU9NDA0LGkucHJlcmVuZGVyUmVhZHk9ITB9ZS5NZXRhVGFncz1yLGUuJG9uKFwiJHN0YXRlQ2hhbmdlU3RhcnRcIixzKSxlLiRvbihcIiRzdGF0ZUNoYW5nZVN1Y2Nlc3NcIixvKSxlLiRvbihcIiRzdGF0ZUNoYW5nZUVycm9yXCIsYSksZS4kb24oXCIkc3RhdGVOb3RGb3VuZFwiLG4pfXZhciByPWFuZ3VsYXIubW9kdWxlKFwidWkucm91dGVyLm1ldGF0YWdzXCIsW1widWkucm91dGVyXCJdKSxpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMucHJlZml4PVwiXCIsdGhpcy5zdWZmaXg9XCJcIix0aGlzLmRlZmF1bHRUaXRsZT1cIlwiLHRoaXMuZGVmYXVsdERlc2NyaXB0aW9uPVwiXCIsdGhpcy5kZWZhdWx0S2V5d29yZHM9XCJcIix0aGlzLnN0YXRpY1Byb3BlcnRpZXM9e30sdGhpcy5lbmFibGVPR1VSTD0hMX1yZXR1cm4gdC5wcm90b3R5cGUuc2V0VGl0bGVQcmVmaXg9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucHJlZml4PXQsdGhpc30sdC5wcm90b3R5cGUuc2V0VGl0bGVTdWZmaXg9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3VmZml4PXQsdGhpc30sdC5wcm90b3R5cGUuc2V0RGVmYXVsdFRpdGxlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRlZmF1bHRUaXRsZT10LHRoaXN9LHQucHJvdG90eXBlLnNldERlZmF1bHREZXNjcmlwdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kZWZhdWx0RGVzY3JpcHRpb249dCx0aGlzfSx0LnByb3RvdHlwZS5zZXREZWZhdWx0S2V5d29yZHM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGVmYXVsdEtleXdvcmRzPXQsdGhpc30sdC5wcm90b3R5cGUuc2V0U3RhdGljUHJvcGVydGllcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zdGF0aWNQcm9wZXJ0aWVzPXQsdGhpc30sdC5wcm90b3R5cGUuc2V0T0dVUkw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZW5hYmxlT0dVUkw9dCx0aGlzfSx0LnByb3RvdHlwZS4kZ2V0PWZ1bmN0aW9uKCl7cmV0dXJue3ByZWZpeDp0aGlzLnByZWZpeCxzdWZmaXg6dGhpcy5zdWZmaXgsZGVmYXVsdFRpdGxlOnRoaXMuZGVmYXVsdFRpdGxlLGRlZmF1bHREZXNjcmlwdGlvbjp0aGlzLmRlZmF1bHREZXNjcmlwdGlvbixkZWZhdWx0S2V5d29yZHM6dGhpcy5kZWZhdWx0S2V5d29yZHMsc3RhdGljUHJvcGVydGllczp0aGlzLnN0YXRpY1Byb3BlcnRpZXMsZW5hYmxlT0dVUkw6dGhpcy5lbmFibGVPR1VSTH19LHR9KCk7ci5wcm92aWRlcihcIlVJUm91dGVyTWV0YXRhZ3NcIixpKTt2YXIgcz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLHIsaSxzLG8sYSl7dGhpcy4kbG9nPXQsdGhpcy5VSVJvdXRlck1ldGF0YWdzPWUsdGhpcy4kaW50ZXJwb2xhdGU9cix0aGlzLiRpbmplY3Rvcj1pLHRoaXMuJHN0YXRlPXMsdGhpcy4kbG9jYXRpb249byx0aGlzLiR3aW5kb3c9YSx0aGlzLnByZXJlbmRlcj17fX1yZXR1cm4gdC4kaW5qZWN0PVtcIiRsb2dcIixcIlVJUm91dGVyTWV0YXRhZ3NcIixcIiRpbnRlcnBvbGF0ZVwiLFwiJGluamVjdG9yXCIsXCIkc3RhdGVcIixcIiRsb2NhdGlvblwiLFwiJHdpbmRvd1wiXSx0LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0cnl7dGhpcy5wcm9wZXJ0aWVzPWFuZ3VsYXIuZXh0ZW5kKHt9LHRoaXMuVUlSb3V0ZXJNZXRhdGFncy5zdGF0aWNQcm9wZXJ0aWVzKSx0aGlzLlVJUm91dGVyTWV0YXRhZ3MuZW5hYmxlT0dVUkwmJih0aGlzLnByb3BlcnRpZXNbXCJvZzp1cmxcIl09dGhpcy4kbG9jYXRpb24uYWJzVXJsKCkpLHQ/KHRoaXMudGl0bGU9dC50aXRsZT90aGlzLlVJUm91dGVyTWV0YXRhZ3MucHJlZml4Kyh0aGlzLmdldFZhbHVlKFwidGl0bGVcIix0LnRpdGxlKXx8XCJcIikrdGhpcy5VSVJvdXRlck1ldGF0YWdzLnN1ZmZpeDp0aGlzLlVJUm91dGVyTWV0YXRhZ3MuZGVmYXVsdFRpdGxlLHRoaXMuZGVzY3JpcHRpb249dC5kZXNjcmlwdGlvbj90aGlzLmdldFZhbHVlKFwiZGVzY3JpcHRpb25cIix0LmRlc2NyaXB0aW9uKTp0aGlzLlVJUm91dGVyTWV0YXRhZ3MuZGVmYXVsdERlc2NyaXB0aW9uLHRoaXMua2V5d29yZHM9dC5rZXl3b3Jkcz90aGlzLmdldFZhbHVlKFwia2V5d29yZHNcIix0LmtleXdvcmRzKTp0aGlzLlVJUm91dGVyTWV0YXRhZ3MuZGVmYXVsdEtleXdvcmRzLGFuZ3VsYXIuZm9yRWFjaCh0LnByb3BlcnRpZXMsZnVuY3Rpb24odCxyKXt2YXIgaT1lLmdldFZhbHVlKHIsdCk7aSYmKGUucHJvcGVydGllc1tyXT1pKX0pKToodGhpcy50aXRsZT10aGlzLlVJUm91dGVyTWV0YXRhZ3MuZGVmYXVsdFRpdGxlLHRoaXMuZGVzY3JpcHRpb249dGhpcy5VSVJvdXRlck1ldGF0YWdzLmRlZmF1bHREZXNjcmlwdGlvbix0aGlzLmtleXdvcmRzPXRoaXMuVUlSb3V0ZXJNZXRhdGFncy5kZWZhdWx0S2V5d29yZHMpLHQmJnQucHJlcmVuZGVyPyh0aGlzLnByZXJlbmRlci5zdGF0dXNDb2RlPXQucHJlcmVuZGVyLnN0YXR1c0NvZGU/dGhpcy5nZXRWYWx1ZShcInByZXJlbmRlci5zdGF0dXNDb2RlXCIsdC5wcmVyZW5kZXIuc3RhdHVzQ29kZSk6MjAwLHRoaXMucHJlcmVuZGVyLmhlYWRlcj10LnByZXJlbmRlci5oZWFkZXI/dGhpcy5nZXRWYWx1ZShcInJlcmVuZGVyLmhlYWRlclwiLHQucHJlcmVuZGVyLmhlYWRlcik6bnVsbCk6KHRoaXMucHJlcmVuZGVyLnN0YXR1c0NvZGU9MjAwLHRoaXMucHJlcmVuZGVyLmhlYWRlcj1udWxsKSx0aGlzLiR3aW5kb3cucHJlcmVuZGVyUmVhZHk9ITB9Y2F0Y2gocil7dGhpcy4kbG9nLmVycm9yKFwiZXJyb3Igb2NjdXJlZCB3aGVuIGV4dHJhY3RpbmcgbWV0YXRhZ3M6XCIscil9fSx0LnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbih0LGUpe3RyeXtyZXR1cm4gZT9cIm51bWJlclwiPT10eXBlb2YgZT9lOlwic3RyaW5nXCI9PXR5cGVvZiBlJiYwPT09ZS50cmltKCkubGVuZ3RoP251bGw6YW5ndWxhci5pc0Z1bmN0aW9uKGUpfHxBcnJheS5pc0FycmF5KGUpP3RoaXMuJGluamVjdG9yLmludm9rZShlLHRoaXMsdGhpcy4kc3RhdGUuJGN1cnJlbnQubG9jYWxzLmdsb2JhbHMpOnRoaXMuJGludGVycG9sYXRlKGUpKHRoaXMuJHN0YXRlLiRjdXJyZW50LmxvY2Fscy5nbG9iYWxzKTpudWxsfWNhdGNoKHIpe3JldHVybiB0aGlzLiRsb2cuZXJyb3IoXCJlcnJvciBvY2N1cmVkIHdoZW4gdHJ5aW5nIHRvIGdldCB0aGUgdmFsdWUgb2YgdGFnOlwiLHQsciksbnVsbH19LHR9KCk7ci5zZXJ2aWNlKFwiTWV0YVRhZ3NcIixzKSxlLiRpbmplY3Q9W1wiJGxvZ1wiLFwiJHJvb3RTY29wZVwiLFwiTWV0YVRhZ3NcIixcIiR3aW5kb3dcIl0sci5ydW4oZSl9KHVpcm91dGVybWV0YXRhZ3N8fCh1aXJvdXRlcm1ldGF0YWdzPXt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aS1yb3V0ZXItbWV0YXRhZ3MubWluLmpzLm1hcFxuIiwiLyoqXG4gKiBBbiBBbmd1bGFyIG1vZHVsZSB0aGF0IGdpdmVzIHlvdSBhY2Nlc3MgdG8gdGhlIGJyb3dzZXJzIGxvY2FsIHN0b3JhZ2VcbiAqIEB2ZXJzaW9uIHYwLjYuMCAtIDIwMTctMDUtMThcbiAqIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmV2b3J5L2FuZ3VsYXItbG9jYWwtc3RvcmFnZVxuICogQGF1dGhvciBncmV2b3J5IDxncmVnQGdyZWdwaWtlLmNhPlxuICogQGxpY2Vuc2UgTUlUIExpY2Vuc2UsIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXG4gKi9cbiFmdW5jdGlvbihhLGIpe3ZhciBjPWIuaXNEZWZpbmVkLGQ9Yi5pc1VuZGVmaW5lZCxlPWIuaXNOdW1iZXIsZj1iLmlzT2JqZWN0LGc9Yi5pc0FycmF5LGg9Yi5pc1N0cmluZyxpPWIuZXh0ZW5kLGo9Yi50b0pzb247Yi5tb2R1bGUoXCJMb2NhbFN0b3JhZ2VNb2R1bGVcIixbXSkucHJvdmlkZXIoXCJsb2NhbFN0b3JhZ2VTZXJ2aWNlXCIsZnVuY3Rpb24oKXt0aGlzLnByZWZpeD1cImxzXCIsdGhpcy5zdG9yYWdlVHlwZT1cImxvY2FsU3RvcmFnZVwiLHRoaXMuY29va2llPXtleHBpcnk6MzAscGF0aDpcIi9cIixzZWN1cmU6ITF9LHRoaXMuZGVmYXVsdFRvQ29va2llPSEwLHRoaXMubm90aWZ5PXtzZXRJdGVtOiEwLHJlbW92ZUl0ZW06ITF9LHRoaXMuc2V0UHJlZml4PWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnByZWZpeD1hLHRoaXN9LHRoaXMuc2V0U3RvcmFnZVR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuc3RvcmFnZVR5cGU9YSx0aGlzfSx0aGlzLnNldERlZmF1bHRUb0Nvb2tpZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5kZWZhdWx0VG9Db29raWU9ISFhLHRoaXN9LHRoaXMuc2V0U3RvcmFnZUNvb2tpZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIHRoaXMuY29va2llLmV4cGlyeT1hLHRoaXMuY29va2llLnBhdGg9Yix0aGlzLmNvb2tpZS5zZWN1cmU9Yyx0aGlzfSx0aGlzLnNldFN0b3JhZ2VDb29raWVEb21haW49ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuY29va2llLmRvbWFpbj1hLHRoaXN9LHRoaXMuc2V0Tm90aWZ5PWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMubm90aWZ5PXtzZXRJdGVtOmEscmVtb3ZlSXRlbTpifSx0aGlzfSx0aGlzLiRnZXQ9W1wiJHJvb3RTY29wZVwiLFwiJHdpbmRvd1wiLFwiJGRvY3VtZW50XCIsXCIkcGFyc2VcIixcIiR0aW1lb3V0XCIsZnVuY3Rpb24oYSxiLGssbCxtKXtmdW5jdGlvbiBuKGMpe2lmKGN8fChjPWIuZXZlbnQpLHMuc2V0SXRlbSYmaChjLmtleSkmJncoYy5rZXkpKXt2YXIgZD12KGMua2V5KTttKGZ1bmN0aW9uKCl7YS4kYnJvYWRjYXN0KFwiTG9jYWxTdG9yYWdlTW9kdWxlLm5vdGlmaWNhdGlvbi5jaGFuZ2VkXCIse2tleTpkLG5ld3ZhbHVlOmMubmV3VmFsdWUsc3RvcmFnZVR5cGU6cC5zdG9yYWdlVHlwZX0pfSl9fXZhciBvLHA9dGhpcyxxPXAucHJlZml4LHI9cC5jb29raWUscz1wLm5vdGlmeSx0PXAuc3RvcmFnZVR5cGU7az9rWzBdJiYoaz1rWzBdKTprPWRvY3VtZW50LFwiLlwiIT09cS5zdWJzdHIoLTEpJiYocT1xP3ErXCIuXCI6XCJcIik7dmFyIHU9ZnVuY3Rpb24oYSl7cmV0dXJuIHErYX0sdj1mdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJeXCIrcSxcImdcIiksXCJcIil9LHc9ZnVuY3Rpb24oYSl7cmV0dXJuIDA9PT1hLmluZGV4T2YocSl9LHg9ZnVuY3Rpb24oKXt0cnl7dmFyIGM9dCBpbiBiJiZudWxsIT09Ylt0XSxkPXUoXCJfX1wiK01hdGgucm91bmQoMWU3Kk1hdGgucmFuZG9tKCkpKTtyZXR1cm4gYyYmKG89Ylt0XSxvLnNldEl0ZW0oZCxcIlwiKSxvLnJlbW92ZUl0ZW0oZCkpLGN9Y2F0Y2goYil7cmV0dXJuIHAuZGVmYXVsdFRvQ29va2llJiYodD1cImNvb2tpZVwiKSxhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLmVycm9yXCIsYi5tZXNzYWdlKSwhMX19LHk9eCgpLHo9ZnVuY3Rpb24oYixjLGUpe3ZhciBmPUooKTt0cnl7aWYoSyhlKSxjPWQoYyk/bnVsbDpqKGMpLCF5JiZwLmRlZmF1bHRUb0Nvb2tpZXx8XCJjb29raWVcIj09PXAuc3RvcmFnZVR5cGUpcmV0dXJuIHl8fGEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24ud2FybmluZ1wiLFwiTE9DQUxfU1RPUkFHRV9OT1RfU1VQUE9SVEVEXCIpLHMuc2V0SXRlbSYmYS4kYnJvYWRjYXN0KFwiTG9jYWxTdG9yYWdlTW9kdWxlLm5vdGlmaWNhdGlvbi5zZXRpdGVtXCIse2tleTpiLG5ld3ZhbHVlOmMsc3RvcmFnZVR5cGU6XCJjb29raWVcIn0pLEYoYixjKTt0cnl7byYmby5zZXRJdGVtKHUoYiksYykscy5zZXRJdGVtJiZhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLnNldGl0ZW1cIix7a2V5OmIsbmV3dmFsdWU6YyxzdG9yYWdlVHlwZTpwLnN0b3JhZ2VUeXBlfSl9Y2F0Y2goZCl7cmV0dXJuIGEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24uZXJyb3JcIixkLm1lc3NhZ2UpLEYoYixjKX1yZXR1cm4hMH1maW5hbGx5e0soZil9fSxBPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9SigpO3RyeXtpZihLKGMpLCF5JiZwLmRlZmF1bHRUb0Nvb2tpZXx8XCJjb29raWVcIj09PXAuc3RvcmFnZVR5cGUpcmV0dXJuIHl8fGEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24ud2FybmluZ1wiLFwiTE9DQUxfU1RPUkFHRV9OT1RfU1VQUE9SVEVEXCIpLEcoYik7dmFyIGU9bz9vLmdldEl0ZW0odShiKSk6bnVsbDtpZighZXx8XCJudWxsXCI9PT1lKXJldHVybiBudWxsO3RyeXtyZXR1cm4gSlNPTi5wYXJzZShlKX1jYXRjaChhKXtyZXR1cm4gZX19ZmluYWxseXtLKGQpfX0sQj1mdW5jdGlvbigpe3ZhciBiPUooKTt0cnl7dmFyIGM9MDthcmd1bWVudHMubGVuZ3RoPj0xJiYoXCJsb2NhbFN0b3JhZ2VcIj09PWFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoLTFdfHxcInNlc3Npb25TdG9yYWdlXCI9PT1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSkmJihjPTEsSyhhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSkpO3ZhciBkLGU7Zm9yKGQ9MDtkPGFyZ3VtZW50cy5sZW5ndGgtYztkKyspaWYoZT1hcmd1bWVudHNbZF0sIXkmJnAuZGVmYXVsdFRvQ29va2llfHxcImNvb2tpZVwiPT09cC5zdG9yYWdlVHlwZSl5fHxhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLndhcm5pbmdcIixcIkxPQ0FMX1NUT1JBR0VfTk9UX1NVUFBPUlRFRFwiKSxzLnJlbW92ZUl0ZW0mJmEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24ucmVtb3ZlaXRlbVwiLHtrZXk6ZSxzdG9yYWdlVHlwZTpcImNvb2tpZVwifSksSChlKTtlbHNlIHRyeXtvLnJlbW92ZUl0ZW0odShlKSkscy5yZW1vdmVJdGVtJiZhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLnJlbW92ZWl0ZW1cIix7a2V5OmUsc3RvcmFnZVR5cGU6cC5zdG9yYWdlVHlwZX0pfWNhdGNoKGIpe2EuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24uZXJyb3JcIixiLm1lc3NhZ2UpLEgoZSl9fWZpbmFsbHl7SyhiKX19LEM9ZnVuY3Rpb24oYil7dmFyIGM9SigpO3RyeXtpZihLKGIpLCF5KXJldHVybiBhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLndhcm5pbmdcIixcIkxPQ0FMX1NUT1JBR0VfTk9UX1NVUFBPUlRFRFwiKSxbXTt2YXIgZD1xLmxlbmd0aCxlPVtdO2Zvcih2YXIgZiBpbiBvKWlmKGYuc3Vic3RyKDAsZCk9PT1xKXRyeXtlLnB1c2goZi5zdWJzdHIoZCkpfWNhdGNoKGIpe3JldHVybiBhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLmVycm9yXCIsYi5EZXNjcmlwdGlvbiksW119cmV0dXJuIGV9ZmluYWxseXtLKGMpfX0sRD1mdW5jdGlvbihiLGMpe3ZhciBkPUooKTt0cnl7SyhjKTt2YXIgZT1xP25ldyBSZWdFeHAoXCJeXCIrcSk6bmV3IFJlZ0V4cCxmPWI/bmV3IFJlZ0V4cChiKTpuZXcgUmVnRXhwO2lmKCF5JiZwLmRlZmF1bHRUb0Nvb2tpZXx8XCJjb29raWVcIj09PXAuc3RvcmFnZVR5cGUpcmV0dXJuIHl8fGEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24ud2FybmluZ1wiLFwiTE9DQUxfU1RPUkFHRV9OT1RfU1VQUE9SVEVEXCIpLEkoKTtpZigheSYmIXAuZGVmYXVsdFRvQ29va2llKXJldHVybiExO3ZhciBnPXEubGVuZ3RoO2Zvcih2YXIgaCBpbiBvKWlmKGUudGVzdChoKSYmZi50ZXN0KGguc3Vic3RyKGcpKSl0cnl7QihoLnN1YnN0cihnKSl9Y2F0Y2goYil7cmV0dXJuIGEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24uZXJyb3JcIixiLm1lc3NhZ2UpLEkoKX1yZXR1cm4hMH1maW5hbGx5e0soZCl9fSxFPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiBiLm5hdmlnYXRvci5jb29raWVFbmFibGVkfHxcImNvb2tpZVwiaW4gayYmKGsuY29va2llLmxlbmd0aD4wfHwoay5jb29raWU9XCJ0ZXN0XCIpLmluZGV4T2YuY2FsbChrLmNvb2tpZSxcInRlc3RcIik+LTEpfWNhdGNoKGIpe3JldHVybiBhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLmVycm9yXCIsYi5tZXNzYWdlKSwhMX19KCksRj1mdW5jdGlvbihiLGMsaCxpKXtpZihkKGMpKXJldHVybiExO2lmKChnKGMpfHxmKGMpKSYmKGM9aihjKSksIUUpcmV0dXJuIGEuJGJyb2FkY2FzdChcIkxvY2FsU3RvcmFnZU1vZHVsZS5ub3RpZmljYXRpb24uZXJyb3JcIixcIkNPT0tJRVNfTk9UX1NVUFBPUlRFRFwiKSwhMTt0cnl7dmFyIGw9XCJcIixtPW5ldyBEYXRlLG49XCJcIjtpZihudWxsPT09Yz8obS5zZXRUaW1lKG0uZ2V0VGltZSgpKy04NjRlNSksbD1cIjsgZXhwaXJlcz1cIittLnRvR01UU3RyaW5nKCksYz1cIlwiKTplKGgpJiYwIT09aD8obS5zZXRUaW1lKG0uZ2V0VGltZSgpKzI0KmgqNjAqNjAqMWUzKSxsPVwiOyBleHBpcmVzPVwiK20udG9HTVRTdHJpbmcoKSk6MCE9PXIuZXhwaXJ5JiYobS5zZXRUaW1lKG0uZ2V0VGltZSgpKzI0KnIuZXhwaXJ5KjYwKjYwKjFlMyksbD1cIjsgZXhwaXJlcz1cIittLnRvR01UU3RyaW5nKCkpLGIpe3ZhciBvPVwiOyBwYXRoPVwiK3IucGF0aDtyLmRvbWFpbiYmKG49XCI7IGRvbWFpbj1cIityLmRvbWFpbiksXCJib29sZWFuXCI9PXR5cGVvZiBpP2k9PT0hMCYmKG4rPVwiOyBzZWN1cmVcIik6ci5zZWN1cmU9PT0hMCYmKG4rPVwiOyBzZWN1cmVcIiksay5jb29raWU9dShiKStcIj1cIitlbmNvZGVVUklDb21wb25lbnQoYykrbCtvK259fWNhdGNoKGIpe3JldHVybiBhLiRicm9hZGNhc3QoXCJMb2NhbFN0b3JhZ2VNb2R1bGUubm90aWZpY2F0aW9uLmVycm9yXCIsYi5tZXNzYWdlKSwhMX1yZXR1cm4hMH0sRz1mdW5jdGlvbihiKXtpZighRSlyZXR1cm4gYS4kYnJvYWRjYXN0KFwiTG9jYWxTdG9yYWdlTW9kdWxlLm5vdGlmaWNhdGlvbi5lcnJvclwiLFwiQ09PS0lFU19OT1RfU1VQUE9SVEVEXCIpLCExO2Zvcih2YXIgYz1rLmNvb2tpZSYmay5jb29raWUuc3BsaXQoXCI7XCIpfHxbXSxkPTA7ZDxjLmxlbmd0aDtkKyspe2Zvcih2YXIgZT1jW2RdO1wiIFwiPT09ZS5jaGFyQXQoMCk7KWU9ZS5zdWJzdHJpbmcoMSxlLmxlbmd0aCk7aWYoMD09PWUuaW5kZXhPZih1KGIpK1wiPVwiKSl7dmFyIGY9ZGVjb2RlVVJJQ29tcG9uZW50KGUuc3Vic3RyaW5nKHEubGVuZ3RoK2IubGVuZ3RoKzEsZS5sZW5ndGgpKTt0cnl7dmFyIGc9SlNPTi5wYXJzZShmKTtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZz9mOmd9Y2F0Y2goYSl7cmV0dXJuIGZ9fX1yZXR1cm4gbnVsbH0sSD1mdW5jdGlvbihhKXtGKGEsbnVsbCl9LEk9ZnVuY3Rpb24oKXtmb3IodmFyIGE9bnVsbCxiPXEubGVuZ3RoLGM9ay5jb29raWUuc3BsaXQoXCI7XCIpLGQ9MDtkPGMubGVuZ3RoO2QrKyl7Zm9yKGE9Y1tkXTtcIiBcIj09PWEuY2hhckF0KDApOylhPWEuc3Vic3RyaW5nKDEsYS5sZW5ndGgpO3ZhciBlPWEuc3Vic3RyaW5nKGIsYS5pbmRleE9mKFwiPVwiKSk7SChlKX19LEo9ZnVuY3Rpb24oKXtyZXR1cm4gdH0sSz1mdW5jdGlvbihhKXtyZXR1cm4gYSYmdCE9PWEmJih0PWEseT14KCkpLHl9LEw9ZnVuY3Rpb24oYSxiLGQsZSxnKXtlPWV8fGI7dmFyIGg9QShlLGcpO3JldHVybiBudWxsPT09aCYmYyhkKT9oPWQ6ZihoKSYmZihkKSYmKGg9aShoLGQpKSxsKGIpLmFzc2lnbihhLGgpLGEuJHdhdGNoKGIsZnVuY3Rpb24oYSl7eihlLGEsZyl9LGYoYVtiXSkpfTt5JiYoYi5hZGRFdmVudExpc3RlbmVyPyhiLmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsbiwhMSksYS4kb24oXCIkZGVzdHJveVwiLGZ1bmN0aW9uKCl7Yi5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLG4pfSkpOmIuYXR0YWNoRXZlbnQmJihiLmF0dGFjaEV2ZW50KFwib25zdG9yYWdlXCIsbiksYS4kb24oXCIkZGVzdHJveVwiLGZ1bmN0aW9uKCl7Yi5kZXRhY2hFdmVudChcIm9uc3RvcmFnZVwiLG4pfSkpKTt2YXIgTT1mdW5jdGlvbihhKXt2YXIgYz1KKCk7dHJ5e0soYSk7Zm9yKHZhciBkPTAsZT1iW3RdLGY9MDtmPGUubGVuZ3RoO2YrKykwPT09ZS5rZXkoZikuaW5kZXhPZihxKSYmZCsrO3JldHVybiBkfWZpbmFsbHl7SyhjKX19O3JldHVybntpc1N1cHBvcnRlZDp5LGdldFN0b3JhZ2VUeXBlOkosc2V0U3RvcmFnZVR5cGU6SyxzZXQ6eixhZGQ6eixnZXQ6QSxrZXlzOkMscmVtb3ZlOkIsY2xlYXJBbGw6RCxiaW5kOkwsZGVyaXZlS2V5OnUsdW5kZXJpdmVLZXk6dixsZW5ndGg6TSxkZWZhdWx0VG9Db29raWU6dGhpcy5kZWZhdWx0VG9Db29raWUsY29va2llOntpc1N1cHBvcnRlZDpFLHNldDpGLGFkZDpGLGdldDpHLHJlbW92ZTpILGNsZWFyQWxsOkl9fX1dfSl9KHdpbmRvdyx3aW5kb3cuYW5ndWxhcik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbmd1bGFyLWxvY2FsLXN0b3JhZ2UubWluLmpzLm1hcCIsImFuZ3VsYXJcbiAgLm1vZHVsZShcIm15QXBwXCIpXG4gIC5zZXJ2aWNlKFwiaG9tZVNlcnZpY2VcIiwgZnVuY3Rpb24oJGh0dHApIHtcblxuICB9KVxuIiwiJ3VzZSBzdHJpY3QnO1xuYW5ndWxhclxuICAubW9kdWxlKFwibXlBcHBcIilcbiAgLnNlcnZpY2UoJ2F1dGhJbnRlcmNlcHRvclNlcnZpY2UnLCBbJyRxJywgJyRpbmplY3RvcicsICckbG9jYXRpb24nLCAnbG9jYWxTdG9yYWdlU2VydmljZScsIGZ1bmN0aW9uICgkcSwgJGluamVjdG9yLCAkc3RhdGUsIGxvY2FsU3RvcmFnZVNlcnZpY2UpIHtcblxuICB0aGlzLnJlcXVlc3QgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAgIHZhciBhdXRoRGF0YSA9IGxvY2FsU3RvcmFnZVNlcnZpY2UuZ2V0KCdhdXRob3JpemF0aW9uRGF0YScpO1xuICAgIGNvbnNvbGUubG9nKGF1dGhEYXRhKTtcbiAgICBpZiAoYXV0aERhdGEpIHtcbiAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSBhdXRoRGF0YS50b2tlbjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfVxuXG4gIHRoaXMucmVzcG9uc2VFcnJvciA9IGZ1bmN0aW9uIChyZWplY3Rpb24pIHtcbiAgICBpZiAocmVqZWN0aW9uLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICB2YXIgYXV0aFNlcnZpY2UgPSAkaW5qZWN0b3IuZ2V0KCdhdXRoU2VydmljZScpO1xuICAgICAgdmFyIGF1dGhEYXRhID0gbG9jYWxTdG9yYWdlU2VydmljZS5nZXQoJ2F1dGhvcml6YXRpb25EYXRhJyk7XG5cbiAgICAgIC8vIGlmIChhdXRoRGF0YSkge1xuICAgICAgLy8gICBpZiAoYXV0aERhdGEudXNlUmVmcmVzaFRva2Vucykge1xuICAgICAgLy8gICAgIC8vICAgJGxvY2F0aW9uLnBhdGgoJy9yZWZyZXNoJyk7XG4gICAgICAvLyAgICAgYXV0aFNlcnZpY2UucmVmcmVzaFRva2VuKCk7XG4gICAgICAvLyAgICAgcmV0dXJuICRxLnJlamVjdChyZWplY3Rpb24pO1xuICAgICAgLy8gICB9XG4gICAgICAvLyB9XG4gICAgICBhdXRoU2VydmljZS5sb2dPdXQoKTtcbiAgICAgICRsb2NhdGlvbi5wYXRoKCcvbG9naW4nKTtcbiAgICB9XG4gICAgcmV0dXJuICRxLnJlamVjdChyZWplY3Rpb24pO1xuICB9XG59XSk7XG4iLCIndXNlIHN0cmljdCc7XG5hbmd1bGFyXG4gIC5tb2R1bGUoXCJteUFwcFwiKVxuICAuZmFjdG9yeSgnYXV0aFNlcnZpY2UnLCBbJyRodHRwJywgJyRxJywgJyRzdGF0ZScsICdsb2NhbFN0b3JhZ2VTZXJ2aWNlJywgZnVuY3Rpb24gKCRodHRwLCAkcSwgJHN0YXRlLCBsb2NhbFN0b3JhZ2VTZXJ2aWNlKSB7XG5cbiAgdmFyIHNlcnZpY2VCYXNlID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvXCJcbiAgdmFyIGF1dGhTZXJ2aWNlRmFjdG9yeSA9IHt9O1xuXG4gIHZhciBfYXV0aGVudGljYXRpb24gPSB7XG4gICAgaXNBdXRoOiBmYWxzZSxcbiAgICBpc0FkbWluOiBmYWxzZVxuICB9O1xuXG4gIHZhciBfbG9naW4gPSBmdW5jdGlvbiAobG9naW5EYXRhKSB7XG4gICAgY29uc29sZS5sb2cobG9naW5EYXRhKTtcblxuICAgIGlmKGxvZ2luRGF0YS5lbWFpbCAmJiBsb2dpbkRhdGEucGFzc3dvcmQpIHtcbiAgICAgIHJldHVybiAkaHR0cC5wb3N0KFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzZXJzL2xvZ2luXCIsIGxvZ2luRGF0YSlcbiAgICB9XG4gIH07XG5cbiAgdmFyIF9sb2dPdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgbG9jYWxTdG9yYWdlU2VydmljZS5yZW1vdmUoJ2F1dGhvcml6YXRpb25EYXRhJyk7XG5cbiAgICBfYXV0aGVudGljYXRpb24uaXNBdXRoID0gZmFsc2U7XG4gICAgX2F1dGhlbnRpY2F0aW9uLmlzQWRtaW4gPSBmYWxzZTtcbiAgICAkc3RhdGUuZ28oXCJhcHAuaG9tZVwiKVxuICB9O1xuXG4gIHZhciBfcmVnaXN0ZXIgPSBmdW5jdGlvbihyZWdpc3RlckRhdGEpIHtcbiAgICBjb25zb2xlLmxvZyhyZWdpc3RlckRhdGEpO1xuXG4gICAgaWYocmVnaXN0ZXJEYXRhLnBhc3N3b3JkID09PSByZWdpc3RlckRhdGEuY29uZmlybVBhc3N3b3JkKSB7XG5cbiAgICAgICRodHRwLnBvc3QoXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdXNlcnMvcmVnaXN0ZXJcIiwgcmVnaXN0ZXJEYXRhKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVnaXN0ZXIgUmVzcG9uc2U6IFwiLCByZXNwb25zZSk7XG4gICAgICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ2F1dGhvcml6YXRpb25EYXRhJyxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB1c2VyX2lkOiByZXNwb25zZS5kYXRhLmlkLFxuICAgICAgICAgICAgdG9rZW46IHJlc3BvbnNlLmRhdGEudG9rZW4sXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICAkc3RhdGUuZ28oXCJhcHAucHJvZmlsZVwiKVxuICAgICAgICB9LFxuICAgICAgICBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgfVxuXG4gIHZhciBfc2V0QXV0aERhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgX2F1dGhlbnRpY2F0aW9uLmlzQXV0aCA9IHRydWU7XG4gICAgX2F1dGhlbnRpY2F0aW9uLmlzQWRtaW4gPSBkYXRhLmlzX2FkbWluO1xuICB9XG5cbiAgLy8gZ3JhYnMgYW5kIGZpbGxzIGF1dGggZGF0YSB0byBtYWRlIGFjY2Vzc2libGUgZXZlcnl3aGVyZVxuICB2YXIgX2dldEF1dGhEYXRhID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBhdXRoRGF0YSA9IGxvY2FsU3RvcmFnZVNlcnZpY2UuZ2V0KCdhdXRob3JpemF0aW9uRGF0YScpO1xuICAgIGlmIChhdXRoRGF0YSkge1xuICAgICAgY29uc29sZS5sb2coYXV0aERhdGEpO1xuICAgICAgX2F1dGhlbnRpY2F0aW9uLmhhc0luZm8gPSBhdXRoRGF0YS5oYXNJbmZvO1xuICAgICAgX2F1dGhlbnRpY2F0aW9uLmlzQWRtaW4gPSBhdXRoRGF0YS5pc0FkbWluO1xuICAgICAgX2F1dGhlbnRpY2F0aW9uLnN0dWRlbnRJZCA9IGF1dGhEYXRhLnN0dWRlbnRJZDtcbiAgICAgIF9hdXRoZW50aWNhdGlvbi51c2VyTmFtZSA9IGF1dGhEYXRhLnVzZXJOYW1lO1xuICAgICAgX2F1dGhlbnRpY2F0aW9uLmlzQXV0aCA9IHRydWU7XG4gICAgfVxuICB9O1xuXG4gIGF1dGhTZXJ2aWNlRmFjdG9yeS5sb2dpbiA9IF9sb2dpbjtcbiAgYXV0aFNlcnZpY2VGYWN0b3J5LmxvZ091dCA9IF9sb2dPdXQ7XG4gIGF1dGhTZXJ2aWNlRmFjdG9yeS5yZWdpc3RlciA9IF9yZWdpc3RlcjtcbiAgYXV0aFNlcnZpY2VGYWN0b3J5LmdldEF1dGhEYXRhID0gX2dldEF1dGhEYXRhO1xuICBhdXRoU2VydmljZUZhY3Rvcnkuc2V0QXV0aERhdGEgPSBfc2V0QXV0aERhdGE7XG4gIGF1dGhTZXJ2aWNlRmFjdG9yeS5hdXRoZW50aWNhdGlvbiA9IF9hdXRoZW50aWNhdGlvbjtcblxuICByZXR1cm4gYXV0aFNlcnZpY2VGYWN0b3J5O1xufV0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuYXBwLmNvbnRyb2xsZXIoJ2FwcENvbnRyb2xsZXInLCBmdW5jdGlvbiAoJHNjb3BlLCBhdXRoU2VydmljZSkge1xuICAgJHNjb3BlLmxvZ091dCA9IGF1dGhTZXJ2aWNlLmxvZ091dDtcbiAgICRzY29wZS5pc0FkbWluID0gYXV0aFNlcnZpY2UuYXV0aGVudGljYXRpb24uaXNBZG1pblxuICAgXG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbmFwcC5kaXJlY3RpdmUoJ25hdmJhcicsIGZ1bmN0aW9uICgpIHtcbiAgIHJldHVybiB7XG4gICAgIHJlc3RyaWN0OiAnRScsXG4gICAgIHRlbXBsYXRlVXJsOiAnLi4vc3JjL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5odG1sJyxcbiAgICAgY29udHJvbGxlcjogJ2xvZ2luQ29udHJvbGxlcidcbiAgIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbmFwcC5jb250cm9sbGVyKFwiaG9tZUNvbnRyb2xsZXJcIiwgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRzdGF0ZVBhcmFtcywgYXV0aFNlcnZpY2UsIGxvY2FsU3RvcmFnZVNlcnZpY2UpIHtcblxufSlcbiIsIid1c2Ugc3RyaWN0JztcbmFwcC5jb250cm9sbGVyKFwibG9naW5Db250cm9sbGVyXCIsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMsIGF1dGhTZXJ2aWNlLCBsb2NhbFN0b3JhZ2VTZXJ2aWNlKSB7XG4gICRzY29wZS51c2VyID0ge31cbiAgJHNjb3BlLmxvZ2luRXJyb3IgPSBmYWxzZVxuICAkc2NvcGUucmVnaXN0ZXJFcnJvciA9IGZhbHNlXG5cbiAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24oKSB7XG4gICAgJHNjb3BlLmxvZ2luRXJyb3IgPSBmYWxzZVxuICAgIGNvbnNvbGUubG9nKCRzY29wZS51c2VyKTtcblxuICAgIGlmKCRzY29wZS51c2VyLmVtYWlsICYmICRzY29wZS51c2VyLnBhc3N3b3JkKSB7XG4gICAgICBhdXRoU2VydmljZS5sb2dpbigkc2NvcGUudXNlcilcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJSZXNwb25zZTogXCIsIHJlc3BvbnNlKTtcbiAgICAgICAgICBsb2NhbFN0b3JhZ2VTZXJ2aWNlLnNldCgnYXV0aG9yaXphdGlvbkRhdGEnLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHVzZXJfaWQ6IHJlc3BvbnNlLmRhdGEuaWQsXG4gICAgICAgICAgICB0b2tlbjogcmVzcG9uc2UuZGF0YS50b2tlbixcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGF1dGhTZXJ2aWNlLnNldEF1dGhEYXRhKHJlc3BvbnNlLmRhdGEpXG4gICAgICAgICAgJHN0YXRlLmdvKCdhcHAucHJvZmlsZScpO1xuICAgICAgICB9LFxuICAgICAgICBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yOiBcIiwgZXJyb3IpO1xuICAgICAgICAgICRzY29wZS5sb2dpbkVycm9yID0gdHJ1ZVxuICAgICAgICAgICRzY29wZS5sb2dpbkVycm9yTWVzc2FnZSA9IFwiVGhlIGVtYWlsIHByb3ZpZGVkIGRvZXNuJ3QgYmVsb25nIHRvIGFuIGFjY291bnQuIFBsZWFzZSB0cnkgYWdpYW4uXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgJHNjb3BlLmxvZ2luRXJyb3IgPSB0cnVlXG4gICAgICAkc2NvcGUubG9naW5FcnJvck1lc3NhZ2UgPSBcIlBsZWFzZSBlbnN1cmUgdGhhdCBhbGwgZmllbGRzIGFyZSBmaWxsZWQgb3V0IVwiXG4gICAgfVxuICB9XG5cbiAgJHNjb3BlLmxvZ091dCA9IGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKCRzY29wZS51c2VyKTtcbiAgICBhdXRoU2VydmljZS5sb2dPdXQoKVxuICB9XG5cbiAgLy8gRElBTCBJTiBMT0dJTiBVWC9VSVxuICAkc2NvcGUucmVnaXN0ZXIgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygkc2NvcGUudXNlcik7XG4gICAgJHNjb3BlLnJlZ2lzdGVyRXJyb3IgPSBmYWxzZVxuICAgIGlmKCRzY29wZS51c2VyLmZpcnN0X25hbWUgJiYgJHNjb3BlLnVzZXIubGFzdF9uYW1lICYmICRzY29wZS51c2VyLmVtYWlsICYmICRzY29wZS51c2VyLnBhc3N3b3JkICYmICRzY29wZS51c2VyLmNvbmZpcm1QYXNzd29yZCkge1xuICAgICAgaWYoJHNjb3BlLnVzZXIucGFzc3dvcmQgPT09ICRzY29wZS51c2VyLmNvbmZpcm1QYXNzd29yZCkge1xuICAgICAgICBhdXRoU2VydmljZS5yZWdpc3Rlcigkc2NvcGUudXNlcilcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAkc2NvcGUubG9naW5FcnJvciA9IHRydWVcbiAgICAgICAgJHNjb3BlLmxvZ2luRXJyb3JNZXNzYWdlID0gXCJPb3BzISBMb29rcyBsaWtlIHRoZSBwYXNzd29yZHMgZG9uJ3QgbWF0Y2guXCJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAkc2NvcGUubG9naW5FcnJvciA9IHRydWVcbiAgICAgICRzY29wZS5sb2dpbkVycm9yTWVzc2FnZSA9IFwiUGxlYXNlIGVuc3VyZSB0aGF0IGFsbCBmaWVsZHMgYXJlIGZpbGxlZCBvdXQhXCJcbiAgICB9XG4gIH1cblxufSlcbiIsImFuZ3VsYXJcbiAgLm1vZHVsZShcIm15QXBwXCIpXG4gIC5maWx0ZXIoJ2hvbWVGaWx0ZXInLCBmdW5jdGlvbigpIHtcbiAgLy8gSW4gdGhlIHJldHVybiBmdW5jdGlvbiwgd2UgbXVzdCBwYXNzIGluIGEgc2luZ2xlIHBhcmFtZXRlciB3aGljaCB3aWxsIGJlIHRoZSBkYXRhIHdlIHdpbGwgd29yayBvbi5cbiAgLy8gV2UgaGF2ZSB0aGUgYWJpbGl0eSB0byBzdXBwb3J0IG11bHRpcGxlIG90aGVyIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgcGFzc2VkIGludG8gdGhlIGZpbHRlciBvcHRpb25hbGx5XG4gIHJldHVybiBmdW5jdGlvbihpbnB1dCwgb3B0aW9uYWwxLCBvcHRpb25hbDIpIHtcbiAgICB2YXIgb3V0cHV0O1xuICAgIC8vIERvIGZpbHRlciB3b3JrIGhlcmVcblxuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cbn0pO1xuXG4vLyBGb3IgbW9yZSBnbyB0byBodHRwczovL3Njb3RjaC5pby90dXRvcmlhbHMvYnVpbGRpbmctY3VzdG9tLWFuZ3VsYXJqcy1maWx0ZXJzXG4iXX0=
