"use strict";function runBlock($rootScope,MetaTags){$rootScope.MetaTags=MetaTags}function configure(UIRouterMetatagsProvider){UIRouterMetatagsProvider.setTitlePrefix("").setTitleSuffix("").setDefaultTitle("Default Title here").setDefaultDescription("Default description here").setDefaultKeywords("Default keywords here").setStaticProperties({}).setOGURL(!0)}function authenticate($q,authService,$state,$timeout){return console.log(authService.authentication.isAuth),authService.authentication.isAuth?$q.when():($timeout(function(){$state.go("app.login")}),$q.reject())}var app=angular.module("myApp",["ui.router","ui.router.metatags","LocalStorageModule"]);app.run(["$rootScope","MetaTags",runBlock]),app.config(["UIRouterMetatagsProvider",configure]),app.config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("app",{abstract:!0,url:"",templateUrl:"../src/views/app-container.html",controller:"appController"}).state("app.home",{url:"/",templateUrl:"../src/views/home.html",controller:"loginController",metaTags:{title:"",description:""}}).state("app.profile",{url:"/profile",templateUrl:"../src/views/profile.html",controller:"loginController",resolve:{authenticate:authenticate},metaTags:{title:"",description:""}}).state("app.login",{url:"/login",templateUrl:"../src/views/login.html",controller:"loginController",metaTags:{title:"",description:""}}).state("app.recipes",{url:"/recipes",templateUrl:"../src/views/recipes.html",controller:"recipesController",metaTags:{title:"",description:""}}).state("app.userRecipes",{url:"/user/recipes",templateUrl:"../src/views/recipes-user.html",controller:"recipesController",metaTags:{title:"",description:""}}).state("app.shoppingLists",{url:"/shoppingLists",templateUrl:"../src/views/shoppingLists.html",controller:"shoppingListController",metaTags:{title:"",description:""}}).state("app.shoppingList",{url:"/shoppingLists/:id",templateUrl:"../src/views/shoppingList.html",controller:"shoppingListController",metaTags:{title:"",description:""}})}),app.config(function($httpProvider){$httpProvider.interceptors.push("authInterceptorService")}),app.run(["authService",function(authService){authService.getAuthData()}]);
"use strict";var uiroutermetatags;!function(t){function e(t,e,r,i){e.MetaTags=r,e.$on("$stateChangeStart",function(t,e,r,s,o){i.prerenderReady=!1}),e.$on("$stateChangeSuccess",function(e,i){i.metaTags||t.debug('MetaTags - route: "'+i.name+'" does not contain any metatags'),r.update(i.metaTags)}),e.$on("$stateChangeError",function(t,e,s,o,a,n){r.prerender.statusCode=500,i.prerenderReady=!0}),e.$on("$stateNotFound",function(t,e,s){r.prerender.statusCode=404,i.prerenderReady=!0})}var r=angular.module("ui.router.metatags",["ui.router"]),i=function(){function t(){this.prefix="",this.suffix="",this.defaultTitle="",this.defaultDescription="",this.defaultKeywords="",this.staticProperties={},this.enableOGURL=!1}return t.prototype.setTitlePrefix=function(t){return this.prefix=t,this},t.prototype.setTitleSuffix=function(t){return this.suffix=t,this},t.prototype.setDefaultTitle=function(t){return this.defaultTitle=t,this},t.prototype.setDefaultDescription=function(t){return this.defaultDescription=t,this},t.prototype.setDefaultKeywords=function(t){return this.defaultKeywords=t,this},t.prototype.setStaticProperties=function(t){return this.staticProperties=t,this},t.prototype.setOGURL=function(t){return this.enableOGURL=t,this},t.prototype.$get=function(){return{prefix:this.prefix,suffix:this.suffix,defaultTitle:this.defaultTitle,defaultDescription:this.defaultDescription,defaultKeywords:this.defaultKeywords,staticProperties:this.staticProperties,enableOGURL:this.enableOGURL}},t}();r.provider("UIRouterMetatags",i);var s=function(){function t(t,e,r,i,s,o,a){this.$log=t,this.UIRouterMetatags=e,this.$interpolate=r,this.$injector=i,this.$state=s,this.$location=o,this.$window=a,this.prerender={}}return t.$inject=["$log","UIRouterMetatags","$interpolate","$injector","$state","$location","$window"],t.prototype.update=function(t){var e=this;try{this.properties=angular.extend({},this.UIRouterMetatags.staticProperties),this.UIRouterMetatags.enableOGURL&&(this.properties["og:url"]=this.$location.absUrl()),t?(this.title=t.title?this.UIRouterMetatags.prefix+(this.getValue("title",t.title)||"")+this.UIRouterMetatags.suffix:this.UIRouterMetatags.defaultTitle,this.description=t.description?this.getValue("description",t.description):this.UIRouterMetatags.defaultDescription,this.keywords=t.keywords?this.getValue("keywords",t.keywords):this.UIRouterMetatags.defaultKeywords,angular.forEach(t.properties,function(t,r){var i=e.getValue(r,t);i&&(e.properties[r]=i)})):(this.title=this.UIRouterMetatags.defaultTitle,this.description=this.UIRouterMetatags.defaultDescription,this.keywords=this.UIRouterMetatags.defaultKeywords),t&&t.prerender?(this.prerender.statusCode=t.prerender.statusCode?this.getValue("prerender.statusCode",t.prerender.statusCode):200,this.prerender.header=t.prerender.header?this.getValue("rerender.header",t.prerender.header):null):(this.prerender.statusCode=200,this.prerender.header=null),this.$window.prerenderReady=!0}catch(r){this.$log.error("error occured when extracting metatags:",r)}},t.prototype.getValue=function(t,e){try{return e?"number"==typeof e?e:"string"==typeof e&&0===e.trim().length?null:angular.isFunction(e)||Array.isArray(e)?this.$injector.invoke(e,this,this.$state.$current.locals.globals):this.$interpolate(e)(this.$state.$current.locals.globals):null}catch(r){return this.$log.error("error occured when trying to get the value of tag:",t,r),null}},t}();r.service("MetaTags",s),e.$inject=["$log","$rootScope","MetaTags","$window"],r.run(e)}(uiroutermetatags||(uiroutermetatags={}));
"use strict";!function(a,b){var c=b.isDefined,d=b.isUndefined,e=b.isNumber,f=b.isObject,g=b.isArray,h=b.isString,i=b.extend,j=b.toJson;b.module("LocalStorageModule",[]).provider("localStorageService",function(){this.prefix="ls",this.storageType="localStorage",this.cookie={expiry:30,path:"/",secure:!1},this.defaultToCookie=!0,this.notify={setItem:!0,removeItem:!1},this.setPrefix=function(a){return this.prefix=a,this},this.setStorageType=function(a){return this.storageType=a,this},this.setDefaultToCookie=function(a){return this.defaultToCookie=!!a,this},this.setStorageCookie=function(a,b,c){return this.cookie.expiry=a,this.cookie.path=b,this.cookie.secure=c,this},this.setStorageCookieDomain=function(a){return this.cookie.domain=a,this},this.setNotify=function(a,b){return this.notify={setItem:a,removeItem:b},this},this.$get=["$rootScope","$window","$document","$parse","$timeout",function(a,b,k,l,m){function n(c){if(c||(c=b.event),s.setItem&&h(c.key)&&w(c.key)){var d=v(c.key);m(function(){a.$broadcast("LocalStorageModule.notification.changed",{key:d,newvalue:c.newValue,storageType:p.storageType})})}}var o,p=this,q=p.prefix,r=p.cookie,s=p.notify,t=p.storageType;k?k[0]&&(k=k[0]):k=document,"."!==q.substr(-1)&&(q=q?q+".":"");var u=function(a){return q+a},v=function(a){return a.replace(new RegExp("^"+q,"g"),"")},w=function(a){return 0===a.indexOf(q)},x=function(){try{var c=t in b&&null!==b[t],d=u("__"+Math.round(1e7*Math.random()));return c&&((o=b[t]).setItem(d,""),o.removeItem(d)),c}catch(b){return p.defaultToCookie&&(t="cookie"),a.$broadcast("LocalStorageModule.notification.error",b.message),!1}},y=x(),z=function(b,c,e){var f=J();try{if(K(e),c=d(c)?null:j(c),!y&&p.defaultToCookie||"cookie"===p.storageType)return y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),s.setItem&&a.$broadcast("LocalStorageModule.notification.setitem",{key:b,newvalue:c,storageType:"cookie"}),F(b,c);try{o&&o.setItem(u(b),c),s.setItem&&a.$broadcast("LocalStorageModule.notification.setitem",{key:b,newvalue:c,storageType:p.storageType})}catch(d){return a.$broadcast("LocalStorageModule.notification.error",d.message),F(b,c)}return!0}finally{K(f)}},A=function(b,c){var d=J();try{if(K(c),!y&&p.defaultToCookie||"cookie"===p.storageType)return y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),G(b);var e=o?o.getItem(u(b)):null;if(!e||"null"===e)return null;try{return JSON.parse(e)}catch(a){return e}}finally{K(d)}},B=function(){var b=J();try{var c=0;arguments.length>=1&&("localStorage"===arguments[arguments.length-1]||"sessionStorage"===arguments[arguments.length-1])&&(c=1,K(arguments[arguments.length-1]));var d,e;for(d=0;d<arguments.length-c;d++)if(e=arguments[d],!y&&p.defaultToCookie||"cookie"===p.storageType)y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),s.removeItem&&a.$broadcast("LocalStorageModule.notification.removeitem",{key:e,storageType:"cookie"}),H(e);else try{o.removeItem(u(e)),s.removeItem&&a.$broadcast("LocalStorageModule.notification.removeitem",{key:e,storageType:p.storageType})}catch(b){a.$broadcast("LocalStorageModule.notification.error",b.message),H(e)}}finally{K(b)}},E=function(){try{return b.navigator.cookieEnabled||"cookie"in k&&(k.cookie.length>0||(k.cookie="test").indexOf.call(k.cookie,"test")>-1)}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.message),!1}}(),F=function(b,c,h,i){if(d(c))return!1;if((g(c)||f(c))&&(c=j(c)),!E)return a.$broadcast("LocalStorageModule.notification.error","COOKIES_NOT_SUPPORTED"),!1;try{var l="",m=new Date,n="";if(null===c?(m.setTime(m.getTime()+-864e5),l="; expires="+m.toGMTString(),c=""):e(h)&&0!==h?(m.setTime(m.getTime()+24*h*60*60*1e3),l="; expires="+m.toGMTString()):0!==r.expiry&&(m.setTime(m.getTime()+24*r.expiry*60*60*1e3),l="; expires="+m.toGMTString()),b){var o="; path="+r.path;r.domain&&(n="; domain="+r.domain),"boolean"==typeof i?!0===i&&(n+="; secure"):!0===r.secure&&(n+="; secure"),k.cookie=u(b)+"="+encodeURIComponent(c)+l+o+n}}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.message),!1}return!0},G=function(b){if(!E)return a.$broadcast("LocalStorageModule.notification.error","COOKIES_NOT_SUPPORTED"),!1;for(var c=k.cookie&&k.cookie.split(";")||[],d=0;d<c.length;d++){for(var e=c[d];" "===e.charAt(0);)e=e.substring(1,e.length);if(0===e.indexOf(u(b)+"=")){var f=decodeURIComponent(e.substring(q.length+b.length+1,e.length));try{var g=JSON.parse(f);return"number"==typeof g?f:g}catch(a){return f}}}return null},H=function(a){F(a,null)},I=function(){for(var a=null,b=q.length,c=k.cookie.split(";"),d=0;d<c.length;d++){for(a=c[d];" "===a.charAt(0);)a=a.substring(1,a.length);var e=a.substring(b,a.indexOf("="));H(e)}},J=function(){return t},K=function(a){return a&&t!==a&&(t=a,y=x()),y};y&&(b.addEventListener?(b.addEventListener("storage",n,!1),a.$on("$destroy",function(){b.removeEventListener("storage",n)})):b.attachEvent&&(b.attachEvent("onstorage",n),a.$on("$destroy",function(){b.detachEvent("onstorage",n)})));return{isSupported:y,getStorageType:J,setStorageType:K,set:z,add:z,get:A,keys:function(b){var c=J();try{if(K(b),!y)return a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),[];var d=q.length,e=[];for(var f in o)if(f.substr(0,d)===q)try{e.push(f.substr(d))}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.Description),[]}return e}finally{K(c)}},remove:B,clearAll:function(b,c){var d=J();try{K(c);var e=q?new RegExp("^"+q):new RegExp,f=b?new RegExp(b):new RegExp;if(!y&&p.defaultToCookie||"cookie"===p.storageType)return y||a.$broadcast("LocalStorageModule.notification.warning","LOCAL_STORAGE_NOT_SUPPORTED"),I();if(!y&&!p.defaultToCookie)return!1;var g=q.length;for(var h in o)if(e.test(h)&&f.test(h.substr(g)))try{B(h.substr(g))}catch(b){return a.$broadcast("LocalStorageModule.notification.error",b.message),I()}return!0}finally{K(d)}},bind:function(a,b,d,e,g){var h=A(e=e||b,g);return null===h&&c(d)?h=d:f(h)&&f(d)&&(h=i(h,d)),l(b).assign(a,h),a.$watch(b,function(a){z(e,a,g)},f(a[b]))},deriveKey:u,underiveKey:v,length:function(a){var c=J();try{K(a);for(var d=0,e=b[t],f=0;f<e.length;f++)0===e.key(f).indexOf(q)&&d++;return d}finally{K(c)}},defaultToCookie:this.defaultToCookie,cookie:{isSupported:E,set:F,add:F,get:G,remove:H,clearAll:I}}}]})}(window,window.angular);
"use strict";angular.module("myApp").service("authInterceptorService",["$q","$injector","$location","localStorageService",function($q,$injector,$state,localStorageService){this.request=function(config){config.headers=config.headers||{};var authData=localStorageService.get("authorizationData");return console.log(authData),authData&&(config.headers.Authorization=authData.token),config},this.responseError=function(rejection){if(401===rejection.status){var authService=$injector.get("authService");localStorageService.get("authorizationData");authService.logOut(),$location.path("/login")}return $q.reject(rejection)}}]);
"use strict";angular.module("myApp").factory("authService",["$http","$q","$state","localStorageService",function($http,$q,$state,localStorageService){var authServiceFactory={},_authentication={isAuth:!1,isAdmin:!1};return authServiceFactory.login=function(loginData){if(console.log(loginData),loginData.email&&loginData.password)return $http.post("http://localhost:3000/users/login",loginData)},authServiceFactory.logOut=function(){localStorageService.remove("authorizationData"),_authentication.isAuth=!1,_authentication.isAdmin=!1,$state.go("app.home")},authServiceFactory.register=function(registerData){console.log(registerData),registerData.password===registerData.confirmPassword&&$http.post("http://localhost:3000/users/register",registerData).then(function(response){console.log("Register Response: ",response),localStorageService.set("authorizationData",{user_id:response.data.id,token:response.data.token}),$state.go("app.profile")},function(error){console.log(error)})},authServiceFactory.getAuthData=function(){var authData=localStorageService.get("authorizationData");authData&&(console.log(authData),_authentication.hasInfo=authData.hasInfo,_authentication.isAdmin=authData.isAdmin,_authentication.studentId=authData.studentId,_authentication.userName=authData.userName,_authentication.isAuth=!0)},authServiceFactory.setAuthData=function(data){_authentication.isAuth=!0,_authentication.isAdmin=data.is_admin},authServiceFactory.authentication=_authentication,authServiceFactory}]);
"use strict";angular.module("myApp").service("homeService",function($http){});
"use strict";angular.module("myApp").service("myRecipesService",function($http){});
"use strict";angular.module("myApp").service("shoppingListService",function($http){});
"use strict";app.controller("appController",function($scope,authService){$scope.logOut=authService.logOut,$scope.isAdmin=authService.authentication.isAdmin});
"use strict";app.controller("homeController",function($scope,$state,$stateParams,authService,localStorageService){});
"use strict";app.controller("loginController",function($scope,$state,$stateParams,authService,localStorageService){$scope.user={},$scope.loginError=!1,$scope.registerError=!1,$scope.login=function(){$scope.loginError=!1,console.log($scope.user),$scope.user.email&&$scope.user.password?authService.login($scope.user).then(function(response){console.log("Response: ",response),localStorageService.set("authorizationData",{user_id:response.data.id,token:response.data.token}),authService.setAuthData(response.data),$state.go("app.profile")},function(error){console.log("Error: ",error),$scope.loginError=!0,$scope.loginErrorMessage="The email provided doesn't belong to an account. Please try agian."}):($scope.loginError=!0,$scope.loginErrorMessage="Please ensure that all fields are filled out!")},$scope.logOut=function(){console.log($scope.user),authService.logOut()},$scope.register=function(){console.log($scope.user),$scope.registerError=!1,$scope.user.first_name&&$scope.user.last_name&&$scope.user.email&&$scope.user.password&&$scope.user.confirmPassword?$scope.user.password===$scope.user.confirmPassword?authService.register($scope.user):($scope.loginError=!0,$scope.loginErrorMessage="Oops! Looks like the passwords don't match."):($scope.loginError=!0,$scope.loginErrorMessage="Please ensure that all fields are filled out!")}});
"use strict";app.controller("recipesController",function($scope,$state,$stateParams,authService,localStorageService){});
"use strict";app.controller("shoppingListController",function($scope,$state,$stateParams,authService,localStorageService){});
"use strict";app.directive("navbar",function(){return{restrict:"E",templateUrl:"../src/components/navbar/navbar.html",controller:"loginController"}});
"use strict";app.directive("cfooter",function(){return{restrict:"E",templateUrl:"../src/components/footer/footer.html"}});
"use strict";angular.module("myApp").filter("homeFilter",function(){return function(input,optional1,optional2){}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
